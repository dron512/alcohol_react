{"version":3,"file":"static/js/195.8062fa8c.chunk.js","mappings":"mRASA,MA4GA,EA5G8BA,IAA8D,IAA7D,kBAAEC,EAAiB,eAAEC,EAAc,kBAACC,GAAmBH,EACpF,MAAOI,EAASC,IAAeC,EAAAA,EAAAA,UAAS,KACjCC,EAAcC,IAAoBF,EAAAA,EAAAA,UAAS,IAE5CG,GAAWC,EAAAA,EAAAA,MAoCjB,OACEC,EAAAA,EAAAA,KAAA,OAAKC,MAAO,CAAEC,QAAS,QAASC,UAC9BH,EAAAA,EAAAA,KAACI,EAAAA,EAAK,CACJC,MAAM,wCACNC,QAASf,EACTgB,KAvCWC,KACfC,QAAQC,IAAIjB,EAASkB,OAAOC,MAAMhB,EAAce,OAAOC,QACpDnB,GAAYG,KACVH,EAASkB,OAAOC,QAAUhB,EAAce,OAAOC,MAChDC,IAAAA,KAAU,CACRR,MAAM,wIAENS,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,SAItC7B,EAAkBC,EAASG,GAC3BiB,IAAAA,KAAU,CACRR,MAAM,0HAENS,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,QAEtC/B,GAAkB,KAGtBQ,EAAS,YACTwB,OAAOC,OAAO,EAAE,EAAE,EAadC,SAVeC,KACnBnC,GAAkB,EAAM,EAUpBoC,OAAO,eACPC,WAAW,eACX1B,MAAO,CAAE2B,IAAK,OACdC,cAAe,CAAE5B,MAAO,CAAE6B,gBAAiB,UAAWC,YAAa,YACnEC,kBAAmB,CAAE/B,MAAO,CAAE6B,gBAAiB,UAAWC,YAAa,UAAWX,MAAO,UAAajB,UAEtG8B,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,KAAK,eACLC,UAAU,aAAYjC,SAAA,EAEtBH,EAAAA,EAAAA,KAACkC,EAAAA,EAAKG,KAAI,CACRF,KAAK,WACLG,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0EAEXrC,UAEFH,EAAAA,EAAAA,KAACyC,EAAAA,QAAK,CACJC,QAAQ1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,CAACP,UAAU,wBAChCQ,YAAY,2BACZT,KAAK,WACLU,SAAUnD,EACVO,MAAO,CACLc,MAAO,OACP+B,OAAQ,OACRC,SAAU,aAIhB/C,EAAAA,EAAAA,KAACkC,EAAAA,EAAKG,KAAI,CACRF,KAAK,gBACLG,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,+EAEXrC,UAEFH,EAAAA,EAAAA,KAACyC,EAAAA,QAAMO,SAAQ,CACb/C,MAAO,CACLc,MAAO,OACP+B,OAAQ,OACRC,SAAU,QAEZL,QAAQ1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,CAACP,UAAU,wBAChCa,KAAK,OACLL,YAAY,uCACZT,KAAK,gBACLU,SAAUhD,YAOd,ECmLV,EAzRyBqD,MACNnD,EAAAA,EAAAA,MAAjB,MACOoD,EAAOC,IAAYzD,EAAAA,EAAAA,UAAS,KAC5B0D,EAAOC,IAAY3D,EAAAA,EAAAA,UAAS,KAC5B4D,EAAWC,IAAY7D,EAAAA,EAAAA,UAAS,KAChC8D,EAAQC,IAAa/D,EAAAA,EAAAA,UAAS,KAE9BJ,EAAgBD,IAAqBK,EAAAA,EAAAA,WAAS,GAwGrD,OACEsC,EAAAA,EAAAA,MAAA,OAAA9B,SAAA,EACEH,EAAAA,EAAAA,KAAC2D,EAAqB,CAClBrE,kBAAmBA,EACnBC,eAAgBA,EAChBC,kBAjDkBA,CAACC,EAASG,KAClCa,QAAQC,IAAIjB,EAASG,GACrBgE,EAAAA,EAAMC,KAAK,GAAD3C,OAAI4C,EAAAA,EAAU,mBAAmB,CACzCX,QACAM,OAAQA,EAAO9C,OAAOC,MACtBmD,YAAYtE,EAASkB,OAAOC,MAC5BoD,WAAWpE,EAAce,OAAOC,QAC/BqD,MAAMC,IACPzD,QAAQC,IAAIwD,EAAS,IACpBC,OAAOC,IACR3D,QAAQC,IAAI0D,EAAM,GAClB,KAuCAnC,EAAAA,EAAAA,MAACoC,EAAAA,GAAS,CAAAlE,SAAA,EACR8B,EAAAA,EAAAA,MAACqC,EAAAA,GAAU,CAAAnE,SAAA,EACTH,EAAAA,EAAAA,KAAA,KAAGoC,UAAU,OAAMjC,SAAC,oBACpB8B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAYjC,SAAA,EACzBH,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,UACfpC,EAAAA,EAAAA,KAAA,KAAAG,SAAG,qCACHH,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,gBAGnBH,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CACHC,KAAK,eACLC,UAAU,aAAYjC,SAAA,EAEtBH,EAAAA,EAAAA,KAACkC,EAAAA,EAAKG,KAAI,CACRF,KAAK,YACLG,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0EAEXrC,UAEFH,EAAAA,EAAAA,KAACyC,EAAAA,QAAK,CACJC,QAAQ1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,CAACP,UAAU,wBAChCQ,YAAY,2BACZT,KAAK,YACLU,SAAUW,EACVvD,MAAO,CACLc,MAAO,OACP+B,OAAQ,OACRC,SAAU,aAIhB/C,EAAAA,EAAAA,KAACkC,EAAAA,EAAKG,KAAI,CACRF,KAAK,QACLG,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,8EAEXrC,UAEFH,EAAAA,EAAAA,KAACyC,EAAAA,QAAMO,SAAQ,CACb/C,MAAO,CACLc,MAAO,OACP+B,OAAQ,OACRC,SAAU,QAEZL,QAAQ1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,CAACP,UAAU,wBAChCa,KAAK,OACLL,YAAY,iCACZT,KAAK,QACLU,SAAUS,OAIdtD,EAAAA,EAAAA,KAACkC,EAAAA,EAAKG,KAAI,CAAAlC,UACRH,EAAAA,EAAAA,KAACuE,EAAAA,GAAM,CACLtB,KAAK,UACLuB,SAAS,SACTvE,MAAO,CACLc,MAAO,OACP+B,OAAQ,OACR2B,WAAW,GAADvD,OAAKC,EAAAA,EAAOC,MAAMC,MAC5B0B,SAAU,QAEZ2B,QA9KMC,KACXpB,EAAU5C,OASH0C,EAAM1C,OAShBiD,EAAAA,EAAMC,KAAK,GAAD3C,OAAI4C,EAAAA,EAAU,oBAAoB,CAC1CP,UAAWA,EAAU5C,OAAOC,MAC5ByC,MAAOA,EAAM1C,OAAOC,QACnBqD,MAAMC,IACPzD,QAAQC,IAAIwD,EAASU,MACrB/D,IAAAA,KAAU,CACRR,MAAM,oDAADa,OACiDgD,EAASU,KAAI,YACnE9D,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,OACpC,IACD8C,OAAOC,IACR3D,QAAQC,IAAI0D,EAAMF,UAClBrD,IAAAA,KAAU,CACRR,MAAM,oDAADa,OACiDkD,EAAMF,SAASU,KAAI,YACzE9D,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,OACpC,IA9BJR,IAAAA,KAAU,CACRR,MAAO,qGACPS,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,QAdtCR,IAAAA,KAAU,CACRR,MAAO,2GACPS,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,OAoCxC,EAmI6BlB,SACpB,0CAKLH,EAAAA,EAAAA,KAACsE,EAAAA,GAAU,CAAAnE,UACT8B,EAAAA,EAAAA,MAAA,OAAKG,UAAU,aAAYjC,SAAA,EACzBH,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,UACfpC,EAAAA,EAAAA,KAAA,KAAAG,SAAG,0CACHH,EAAAA,EAAAA,KAAA,OAAKoC,UAAU,eAGnBH,EAAAA,EAAAA,MAACC,EAAAA,EAAKG,KAAI,CACRF,KAAK,QACLG,MAAO,CACL,CACEW,KAAM,QACNT,QAAS,4FAEX,CACED,UAAU,EACVC,QAAS,4DAOX,CACEqC,YAAY,EACZrC,QAAS,yGAEXrC,SAAA,EAEFH,EAAAA,EAAAA,KAACyC,EAAAA,QAAK,CACJG,YAAY,2FACZ3C,MAAO,CAAEc,MAAO,MAAO+B,OAAQ,GAAIC,SAAU,QAC7CF,SAAUiC,GAAK1B,EAAS0B,EAAEnE,OAAOC,UAEnCZ,EAAAA,EAAAA,KAACuE,EAAAA,GAAM,CACLtB,KAAK,SACLhD,MAAO,CACLc,MAAO,MACP+B,OAAQ,OACRhB,gBAAgB,GAADZ,OAAKC,EAAAA,EAAOC,MAAM2D,MACjCC,OAAQ,OACRC,WAAY,MACZ7D,MAAO,QACP8D,WAAY,OACZnC,SAAU,QAEZ2B,QApLQS,gBACVvB,EAAAA,EAAMC,KAAK,GAAD3C,OAAI4C,EAAAA,EAAU,wBAAA5C,OAAuBiC,GAAS,CAC9D,GAAGc,MAAKmB,IACFC,KAAKC,UAAUF,EAAIG,QAAQC,WAAW,MACxC3E,IAAAA,KAAU,uEACZ,IACCsD,OAAMW,IACPrE,QAAQC,IAAIoE,EAAE,GACd,EA4KyB3E,SACpB,iCAIHH,EAAAA,EAAAA,KAACkC,EAAAA,EAAKG,KAAI,CACRF,KAAK,SACLG,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,wEAEXrC,UAEFH,EAAAA,EAAAA,KAACyC,EAAAA,QAAMO,SAAQ,CACb/C,MAAO,CACLc,MAAO,OACP+B,OAAQ,OACRC,SAAU,QAEZL,QAAQ1C,EAAAA,EAAAA,KAAC2C,EAAAA,EAAY,CAACP,UAAU,wBAChCa,KAAK,OACLL,YAAY,2BACZT,KAAK,SACLU,SAAUa,OAGd1D,EAAAA,EAAAA,KAACuE,EAAAA,GAAM,CACLtB,KAAK,UACLuB,SAAS,SACTvE,MAAO,CACLc,MAAO,OACP+B,OAAQ,OACR2B,WAAW,GAADvD,OAAKC,EAAAA,EAAOC,MAAMC,MAC5B0B,SAAU,QAEZ2B,QA/LUe,KACZtC,GAASM,EACXG,EAAAA,EAAMC,KAAK,GAAD3C,OAAI4C,EAAAA,EAAU,uBAAuB,CAC7CX,QACAM,OAAQA,EAAO9C,OAAOC,QACrBqD,MAAMC,IACP5E,GAAkB,EAAK,IACtB6E,OAAOC,IACR3D,QAAQC,IAAI0D,EAAMF,UAClBrD,IAAAA,KAAU,CACRR,MAAM,yKAENS,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,OACpC,IAGJR,IAAAA,KAAU,CACRR,MAAM,yIAENS,KAAM,OACNC,MAAO,IACPC,kBAAkB,2FAClBC,mBAAmB,GAADC,OAAKC,EAAAA,EAAOC,MAAMC,OAExC,EAoKyBlB,SACpB,+CAIC,C,6EC7RH,MAAMkE,GAASqB,EAAAA,EAAAA,GAAA,OAAA/E,OAAA,aAAA+E,CAAA,CAAAvD,KAAA,SAAAwD,OAAA,qDAITrB,GAAUoB,EAAAA,EAAAA,GAAA,OAAA/E,OAAA,aAAA+E,CAAA,+PAkBVvE,EAAAA,EAAOC,MAAMwE,KAAI,gFASVzE,EAAAA,EAAOC,MAAMwE,KAAI,mHASxBzE,EAAAA,EAAOC,MAAMwE,KAAI,kFAQVzE,EAAAA,EAAOC,MAAMwE,KAAI,OAIxBC,GAAOH,EAAAA,EAAAA,GAAA,UAAA/E,OAAA,aAAA+E,CAAA,oFAMTvE,EAAAA,EAAOC,MAAMwE,KAAI,qCAGNzE,EAAAA,EAAOC,MAAM0E,KAAI,qD,0DC9DvC,QADmB,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,6qBAAirB,KAAQ,OAAQ,MAAS,Y,cCMh2BnD,EAAe,SAAsBoD,EAAOC,GAC9C,OAAoBC,EAAAA,cAAoBC,EAAAA,GAAUC,EAAAA,EAAAA,GAAS,CAAC,EAAGJ,EAAO,CACpEC,IAAKA,EACLlF,KAAMsF,IAEV,EAIA,QAA4BH,EAAAA,WAAiBtD,E","sources":["pages/sign/SignFindIdPwModalPage.js","pages/sign/SignFindIdPwPage.js","styles/login/loginCss.js","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js"],"sourcesContent":["// App.js\r\nimport React, { useState } from 'react';\r\nimport { Modal, Button, Form, Input } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { Common } from '../../styles/CommonCss';\r\nimport { useNavigate } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\nconst SignFindIdPwModalPage = ({ setIsModalVisible, isModalVisible,changePasswordApi }) => {\r\n  const [password,setPassword] = useState('') // 비밀번호\r\n  const [passwordCheck,setPasswordCheck] = useState('') // 비밀번호 확인\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleOk = () => {\r\n    console.log(password.target.value,passwordCheck.target.value)\r\n    if(password || passwordCheck){\r\n      if(password.target.value !== passwordCheck.target.value){\r\n        Swal.fire({\r\n          title:\r\n            `<p style='font-size:4rem;margin:1rem;'>\\n\\n 비밀번호가 일치하지 않습니다.\\n\\n</p>`,\r\n          icon: \"info\",\r\n          width: 600,\r\n          confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n          confirmButtonColor: `${Common.color.f900}`,\r\n        })\r\n      }\r\n      else{\r\n        changePasswordApi(password,passwordCheck);\r\n        Swal.fire({\r\n          title:\r\n            `<p style='font-size:4rem;margin:1rem;'>비밀번호\\n\\n 변경되었습니다.\\n\\n</p>`,\r\n          icon: \"info\",\r\n          width: 600,\r\n          confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n          confirmButtonColor: `${Common.color.f900}`,\r\n        })\r\n        setIsModalVisible(false);\r\n      }\r\n    }\r\n    navigate('/sign/in');\r\n    window.scroll(0,0)\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <Modal\r\n        title=\"비밀번호 변경\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okText=\"변경\"\r\n        cancelText=\"취소\"\r\n        style={{ top: '30%' }} // 모달의 위치를 조정합니다.\r\n        okButtonProps={{ style: { backgroundColor: '#1890ff', borderColor: '#1890ff' } }} // 확인 버튼 스타일 조정\r\n        cancelButtonProps={{ style: { backgroundColor: '#ff4d4f', borderColor: '#ff4d4f', color: 'white' } }} // 취소 버튼 스타일 조정\r\n      >\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n        >\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호를 입력해 주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"비밀번호\"\r\n              name=\"password\"\r\n              onChange={setPassword}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"passwordCheck\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"비밀번호 확인 입력해주세요\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              type=\"text\"\r\n              placeholder=\"비밀번호확인\"\r\n              name=\"passwordCheck\"\r\n              onChange={setPasswordCheck}\r\n            />\r\n          </Form.Item>\r\n\r\n        </Form>\r\n\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignFindIdPwModalPage;","import { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { LoginBt, LoginTitle, LoginWrap } from \"../../styles/login/loginCss\";\r\nimport axios from \"axios\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport Swal from \"sweetalert2\";\r\nimport SignFindIdPwModalPage from \"./SignFindIdPwModalPage\";\r\n\r\nconst SignFindIdPwPage = () => {\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState(\"\");\r\n  const [phone, setPhone] = useState(\"\");\r\n  const [birthdate, setBirth] = useState(\"\");\r\n  const [tempPw, setTempPw] = useState(\"\");\r\n\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n\r\n  const findEmail = () => {\r\n    if (!birthdate.target) {\r\n      Swal.fire({\r\n        title: \"<p style='font-size:4rem;margin:1rem;'>생년월일을 입력하세요</p>\",\r\n        icon: \"info\",\r\n        width: 600,\r\n        confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n        confirmButtonColor: `${Common.color.f900}`,\r\n      })\r\n\r\n    } else if (!phone.target) {\r\n      Swal.fire({\r\n        title: \"<p style='font-size:4rem;margin:1rem;'>폰번호를 입력하세요</p>\",\r\n        icon: \"info\",\r\n        width: 600,\r\n        confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n        confirmButtonColor: `${Common.color.f900}`,\r\n      })\r\n    } else {\r\n      axios.post(`${SERVER_URL}/login/findEmail`, {\r\n        birthdate: birthdate.target.value,\r\n        phone: phone.target.value,\r\n      }).then((response) => {\r\n        console.log(response.data);\r\n        Swal.fire({\r\n          title:\r\n            `<p style='font-size:4rem;margin:1rem;'>EMAIL\\n\\n ${response.data}\\n\\n</p>`,\r\n          icon: \"info\",\r\n          width: 600,\r\n          confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n          confirmButtonColor: `${Common.color.f900}`,\r\n        })\r\n      }).catch((error) => {\r\n        console.log(error.response);\r\n        Swal.fire({\r\n          title:\r\n            `<p style='font-size:4rem;margin:1rem;'>EMAIL\\n\\n ${error.response.data}\\n\\n</p>`,\r\n          icon: \"info\",\r\n          width: 600,\r\n          confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n          confirmButtonColor: `${Common.color.f900}`,\r\n        })\r\n      });\r\n    }\r\n  };\r\n\r\n  const emailauth = async () => {\r\n    await axios.post(`${SERVER_URL}/login/tempPw?email=${email}`, {\r\n    }).then(res => {\r\n      if (JSON.stringify(res.status).startsWith('2')) {\r\n        Swal.fire('인증번호가 발송됐습니다.');\r\n      }\r\n    }).catch(e => {\r\n      console.log(e)\r\n    })\r\n  }\r\n\r\n  const changePasswordApi = (password,passwordCheck)=>{\r\n    console.log(password,passwordCheck)\r\n    axios.post(`${SERVER_URL}/login/changePW`, {\r\n      email,\r\n      tempPw: tempPw.target.value,\r\n      newPassword:password.target.value,\r\n      passwordch:passwordCheck.target.value\r\n    }).then((response) => {\r\n      console.log(response);\r\n    }).catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  const modalShow = () => {\r\n    if (email || tempPw)\r\n      axios.post(`${SERVER_URL}/login/validateTemp`, {\r\n        email,\r\n        tempPw: tempPw.target.value,\r\n      }).then((response) => {\r\n        setIsModalVisible(true);\r\n      }).catch((error) => {\r\n        console.log(error.response);\r\n        Swal.fire({\r\n          title:\r\n            `<p style='font-size:4rem;margin:1rem;'>인증이 실패되었습니다. 이메일을 확인하세요.\\n\\n</p>`,\r\n          icon: \"info\",\r\n          width: 600,\r\n          confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n          confirmButtonColor: `${Common.color.f900}`,\r\n        })\r\n      });\r\n    else{\r\n      Swal.fire({\r\n        title:\r\n          `<p style='font-size:4rem;margin:1rem;'>이메일과 인증번호를 입력하세요.\\n\\n</p>`,\r\n        icon: \"info\",\r\n        width: 600,\r\n        confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n        confirmButtonColor: `${Common.color.f900}`,\r\n      })\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <SignFindIdPwModalPage \r\n          setIsModalVisible={setIsModalVisible} \r\n          isModalVisible={isModalVisible}\r\n          changePasswordApi={changePasswordApi} />\r\n      <LoginWrap>\r\n        <LoginTitle>\r\n          <p className=\"logo\">ALCHOHOL HOLIC</p>\r\n          <div className=\"email-line\">\r\n            <div className=\"line\"></div>\r\n            <p>이메일 찾기</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </LoginTitle>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n        >\r\n          <Form.Item\r\n            name=\"birthdate\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"생년월일을 입력해 주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"생년월일\"\r\n              name=\"birthdate\"\r\n              onChange={setBirth}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"phone\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"핸드폰번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              type=\"text\"\r\n              placeholder=\"핸드폰번호\"\r\n              name=\"phone\"\r\n              onChange={setPhone}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                background: `${Common.color.f900}`,\r\n                fontSize: \"20px\",\r\n              }}\r\n              onClick={findEmail}\r\n            >\r\n              이메일 찾기\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <LoginTitle>\r\n          <div className=\"login-line\">\r\n            <div className=\"line\"></div>\r\n            <p>비밀번호찾기</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </LoginTitle>\r\n        <Form.Item\r\n          name=\"email\"\r\n          rules={[\r\n            {\r\n              type: \"email\",\r\n              message: \"올바른 이메일 형식을 입력하세요.\",\r\n            },\r\n            {\r\n              required: true,\r\n              message: \"이메일을 입력하세요.\",\r\n            },\r\n            // {\r\n            //   pattern:\r\n            //     /^[A-Za-z0-9]([-_.]?[A-Za-z0-9])*@[A-Za-z0-9]([-_.]?[A-Za-z0-9])*\\.[A-Za-z]{2,3}$/i,\r\n            //   message: \"이메일 형식에 맞게 작성해주세요\",\r\n            // },\r\n            {\r\n              whitespace: true,\r\n              message: \"이메일은 공백만으로 만들 수 없습니다\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder=\"이메일(대소문자를 확인해 주세요)\"\r\n            style={{ width: \"78%\", height: 60, fontSize: \"20px\" }}\r\n            onChange={e => setEmail(e.target.value)}\r\n          />\r\n          <Button\r\n            type=\"button\"\r\n            style={{\r\n              width: \"20%\",\r\n              height: \"60px\",\r\n              backgroundColor: `${Common.color.p900}`,\r\n              border: \"none\",\r\n              marginLeft: \"8px\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n            onClick={emailauth}\r\n          >\r\n            인증하기\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name=\"tempPw\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"인증번호를 입력해주세요\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input.Password\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"60px\",\r\n              fontSize: \"20px\",\r\n            }}\r\n            prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n            type=\"text\"\r\n            placeholder=\"인증번호\"\r\n            name=\"tempPw\"\r\n            onChange={setTempPw}\r\n          />\r\n        </Form.Item>\r\n        <Button\r\n          type=\"primary\"\r\n          htmlType=\"submit\"\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"60px\",\r\n            background: `${Common.color.f900}`,\r\n            fontSize: \"20px\",\r\n          }}\r\n          onClick={modalShow}\r\n        >\r\n          비밀번호 변경\r\n        </Button>\r\n      </LoginWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignFindIdPwPage;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport { Common } from \"../CommonCss\";\r\n\r\nexport const LoginWrap = styled.div`\r\n  min-width: 1300px;\r\n  padding: 130px 330px 130px 330px;\r\n`;\r\nexport const LoginTitle = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column; /* 세로로 요소를 나열하도록 설정 */\r\n  align-items: center;\r\n  /* padding: 30px 0 30px 0; */\r\n  .logo {\r\n    font-size: 50px;\r\n    font-weight: bold;\r\n    padding-bottom: 130px;\r\n  }\r\n  .email-line {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: ${Common.color.p800};\r\n    padding-bottom: 50px;\r\n    /* padding: 20px 0 20px 0; */\r\n    p {\r\n      font-size: 20px;\r\n    }\r\n    .line {\r\n      height: 2px;\r\n      width: 30%;\r\n      background: ${Common.color.p800};\r\n    }\r\n  }\r\n  .login-line {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: ${Common.color.p800};\r\n    padding: 20px 0 40px 0;\r\n    p {\r\n      font-size: 20px;\r\n    }\r\n    .line {\r\n      height: 2px;\r\n      width: 30%;\r\n      background: ${Common.color.p800};\r\n    }\r\n  }\r\n`;\r\nexport const LoginBt = styled.button`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-bottom: 17px;\r\n  border-radius: 8px;\r\n  font-size: 20px;\r\n  color: ${Common.color.p800};\r\n  /* background: ${Common.color.y900}; */\r\n  background: none;\r\n  border: 1px solid ${Common.color.p500};\r\n  cursor: pointer;\r\n  img {\r\n    width: 21px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UserOutlined.displayName = 'UserOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);"],"names":["_ref","setIsModalVisible","isModalVisible","changePasswordApi","password","setPassword","useState","passwordCheck","setPasswordCheck","navigate","useNavigate","_jsx","style","padding","children","Modal","title","visible","onOk","handleOk","console","log","target","value","Swal","icon","width","confirmButtonText","confirmButtonColor","concat","Common","color","f900","window","scroll","onCancel","handleCancel","okText","cancelText","top","okButtonProps","backgroundColor","borderColor","cancelButtonProps","_jsxs","Form","name","className","Item","rules","required","message","Input","prefix","UserOutlined","placeholder","onChange","height","fontSize","Password","type","SignFindIdPwPage","email","setEmail","phone","setPhone","birthdate","setBirth","tempPw","setTempPw","SignFindIdPwModalPage","axios","post","SERVER_URL","newPassword","passwordch","then","response","catch","error","LoginWrap","LoginTitle","Button","htmlType","background","onClick","findEmail","data","whitespace","e","p900","border","marginLeft","fontWeight","async","res","JSON","stringify","status","startsWith","modalShow","_styled","styles","p800","LoginBt","p500","props","ref","React","AntdIcon","_extends","UserOutlinedSvg"],"sourceRoot":""}