{"version":3,"file":"static/js/384.423bac15.chunk.js","mappings":"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","sources":["styles/StoreMapCss.js","components/storeMap/StoreMapInfo.js","api/marketMapApi.js","pages/storemap/StoreMapPage.js"],"sourcesContent":["import styled from \"@emotion/styled/macro\";\r\nimport { Common } from \"./CommonCss\";\r\n\r\nexport const StoreWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  min-width: 1000px;\r\n  gap: 20px;\r\n  border: none; /* 테두리 제거 */\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const StoreInfo = styled.div`\r\n  position: relative;\r\n  min-width: 400px;\r\n  justify-content: center;\r\n  text-align: center;\r\n  background: aqua; /* 배경색 제거 */\r\n`;\r\n\r\nexport const MyLocation = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n\r\n  width: 400px;\r\n  height: 50px;\r\n  justify-content: space-between;\r\n  text-align: center;\r\n  border-radius: 10px;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  border: 2px solid ${Common.color.p500};\r\n`;\r\n\r\nexport const LocationBox = styled.div`\r\n  position: relative;\r\n\r\n  min-width: 400px;\r\n  align-items: center;\r\n  padding: 20px 10px;\r\n\r\n  border-bottom: 2px solid ${Common.color.p200};\r\n  .branch {\r\n    position: relative;\r\n    display: flex;\r\n    gap: 5px;\r\n    /* margin-bottom: 20px; */\r\n  }\r\n`;\r\n\r\nexport const MarketWrap = styled.div`\r\n  /* background-color: red; */\r\n  height: 500px;\r\n  overflow: scroll;\r\n`;\r\n","import React from \"react\";\r\nimport { LocationBox, MyLocation } from \"../../styles/StoreMapCss\";\r\nimport { P16, PB16 } from \"../../styles/basic\";\r\nimport { MarginB10, MarginB20 } from \"../../styles/common/reviewProductCss\";\r\nimport styled from \"@emotion/styled/macro\";\r\n\r\nconst initState = [\r\n  {\r\n    marketcode: 1,\r\n    marketname: \"포도대구동성로점\",\r\n    address: \"대구광역시 중구 공평동 57-3번지 101호\",\r\n    phonenumber: \"01011111111\",\r\n    delivery: \"PickUp\",\r\n    opentime: \"10:00:00\",\r\n    closetime: \"22:00:00\",\r\n  },\r\n];\r\nconst StoreMapInfo = ({ market }) => {\r\n  return (\r\n    <>\r\n      <LocationBox>\r\n        <div className=\"branch\">\r\n          <PB16>{market.marketname}</PB16>\r\n          <PB16>|</PB16>\r\n          <PB16>{market.Branch}</PB16>\r\n        </div>\r\n        <MarginB10 />\r\n        <div>\r\n          <P16>{market.address} </P16>\r\n          <P16>{market.phonenumber}</P16>\r\n        </div>\r\n      </LocationBox>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StoreMapInfo;\r\n","import axios from \"axios\";\r\nimport { SERVER_URL } from \"./config\";\r\n\r\nconst prefix = `${SERVER_URL}/market`;\r\n\r\nexport const getMarketAddress = async ({ successFn, failFn, errorFn }) => {\r\n  try {\r\n    const url = `${prefix}/address`;\r\n    const res = await axios.get(url);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      successFn(res.data);\r\n    } else {\r\n      failFn(\"메인 모스트 데이터 불러오기 실패\");\r\n    }\r\n  } catch (error) {\r\n    errorFn(error);\r\n  }\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { KakaoMapContext, Map, MapMarker } from \"react-kakao-maps-sdk\";\r\nimport StoreMapInfo from \"../../components/storeMap/StoreMapInfo\";\r\nimport { PB16 } from \"../../styles/basic\";\r\nimport {\r\n  ItemContent,\r\n  ItemWrap,\r\n  MarginB20,\r\n} from \"../../styles/common/reviewProductCss\";\r\nimport { MarketWrap, MyLocation, StoreWrap } from \"../../styles/StoreMapCss\";\r\nimport BasicLayout from \"../../layout/BasicLayout\";\r\nimport { getMarketAddress } from \"../../api/marketMapApi\";\r\nimport axios from \"axios\";\r\n\r\nconst geocoder = new window.kakao.maps.services.Geocoder();\r\n\r\n// 주소 좌표 변환\r\nconst getAddr = addr => {\r\n  return new Promise((resolve, reject) => {\r\n    geocoder.addressSearch(`${addr}`, function (result, status) {\r\n      if (status === window.kakao.maps.services.Status.OK) {\r\n        const coords = {\r\n          lat: result[0].y,\r\n          lng: result[0].x,\r\n        };\r\n        resolve(coords);\r\n      } else reject(status);\r\n    });\r\n  });\r\n};\r\n\r\nvar infos = [\r\n  {\r\n    marketcode: 0,\r\n    marketname: \"\",\r\n    address: \"\",\r\n    delivery: \"\",\r\n    opentime: \"\",\r\n    closetime: \"\",\r\n    phonenumber: \"\",\r\n  },\r\n];\r\n\r\n// 마켓 정보 가져 옴\r\nconst marketInfo = async () => {\r\n  infos = await axios.get(\"http://threeback.hellomh.site/market/address\");\r\n\r\n  return infos;\r\n};\r\n\r\nconst StoreMapPage = () => {\r\n  const [marketData, setMarketData] = useState([]);\r\n\r\n  const [loading, setLoading] = useState(true); // 로딩 중 여부 상태\r\n\r\n  const [addrs, setAddrs] = useState([\r\n    {\r\n      position: {\r\n        lat: 0,\r\n        lng: 0,\r\n      },\r\n    },\r\n  ]);\r\n\r\n  // 처음 내 위치\r\n  const mygeo = () => {\r\n    if (navigator.geolocation) {\r\n      navigator.geolocation.getCurrentPosition(function (position) {\r\n        setPoint({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n        setmarkerP({\r\n          lat: position.coords.latitude,\r\n          lng: position.coords.longitude,\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  const [point, setPoint] = useState({\r\n    lat: 0,\r\n    lng: 0,\r\n  });\r\n\r\n  const [markerP, setmarkerP] = useState({\r\n    lat: 0,\r\n    lng: 0,\r\n  });\r\n\r\n  const [markers, setMarkers] = useState(() => {\r\n    return [{ position: { lat: 0, lng: 0 } }];\r\n  });\r\n\r\n  // 마켓 마커 찍어줌\r\n  const getMarkerInfo = async () => {\r\n    const result = await marketInfo();\r\n    if (result.data != null) {\r\n      markers.splice(0, 1);\r\n      for (let i = 0; i < result.data.length; i++) {\r\n        await getAddr(result.data[i].address).then(coords => {\r\n          addrs.push({\r\n            position: { lat: coords.lat, lng: coords.lng },\r\n          });\r\n        });\r\n      }\r\n      setMarkers(addrs);\r\n\r\n      setLoading(false); // 로딩 상태 업데이트\r\n      return result;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    mygeo();\r\n\r\n    getMarkerInfo();\r\n\r\n    // 현재 위치 주소 보여줌\r\n    geocoder.coord2Address(markerP.lng, markerP.lat, function (result, status) {\r\n      if (status === window.kakao.maps.services.Status.OK) {\r\n        document.getElementById(\"myaddress\").innerText =\r\n          result[0].address.address_name;\r\n      }\r\n    });\r\n\r\n    // 마켓 목록 보여줌\r\n    getMarketAddress({\r\n      successFn: data => {\r\n        setMarketData(data);\r\n      },\r\n      failFn: data => {\r\n        alert(\"마켓정보 불러오기 실패\");\r\n      },\r\n      errorFn: data => {\r\n        alert(\"서버 불안정\");\r\n      },\r\n    });\r\n\r\n  }, [markers]);\r\n\r\n  // 맵 로딩시 나옴\r\n  if (loading) {\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <BasicLayout>\r\n        <ItemWrap>\r\n          <ItemContent>\r\n            <StoreWrap>\r\n              <div>\r\n                <MyLocation>\r\n                  <PB16 style={{ width: \"50px\" }}>내 위치</PB16>\r\n                  <PB16 id=\"myaddress\"></PB16>\r\n                </MyLocation>\r\n                <MarginB20 />\r\n                <MarketWrap>\r\n                  {marketData.map((market, index) => (\r\n                    <StoreMapInfo key={index} market={market} />\r\n                  ))}\r\n                </MarketWrap>\r\n              </div>\r\n\r\n              <Map\r\n                center={point}\r\n                style={{\r\n                  width: \"550px\",\r\n                  height: \"550px\",\r\n                }}\r\n                level={4}\r\n                onDragEnd={map => {\r\n                  const latlng = map.getCenter();\r\n\r\n                  setPoint({\r\n                    lat: latlng.getLat(),\r\n                    lng: latlng.getLng(),\r\n                  });\r\n                }}\r\n              >\r\n                <MapMarker\r\n                  position={markerP}\r\n                  image={{\r\n                    src: \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\",\r\n                    size: new window.kakao.maps.Size(24, 35),\r\n                  }}\r\n                ></MapMarker>\r\n                {markers.map((marker, index) => {\r\n                  if (markers !== null) {\r\n                    return (\r\n                      <MapMarker\r\n                        key={index}\r\n                        position={marker.position}\r\n                        clickable={true}\r\n                      >\r\n                      </MapMarker>\r\n                    );\r\n                  }\r\n                })}\r\n              </Map>\r\n            </StoreWrap>\r\n          </ItemContent>\r\n        </ItemWrap>\r\n      </BasicLayout>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StoreMapPage;\r\n"],"names":["StoreWrap","_styled","target","name","styles","MyLocation","Common","color","p500","LocationBox","p200","MarketWrap","_ref","market","_jsx","_Fragment","children","_jsxs","className","PB16","marketname","Branch","MarginB10","P16","address","phonenumber","prefix","concat","SERVER_URL","geocoder","window","kakao","maps","services","Geocoder","getAddr","addr","Promise","resolve","reject","addressSearch","result","status","Status","OK","coords","lat","y","lng","x","StoreMapPage","marketData","setMarketData","useState","loading","setLoading","addrs","setAddrs","position","point","setPoint","markerP","setmarkerP","markers","setMarkers","getMarkerInfo","async","axios","get","marketInfo","data","splice","i","length","then","push","useEffect","navigator","geolocation","getCurrentPosition","latitude","longitude","coord2Address","document","getElementById","innerText","address_name","successFn","failFn","errorFn","url","res","toString","charAt","error","getMarketAddress","alert","BasicLayout","ItemWrap","ItemContent","style","width","id","MarginB20","map","index","StoreMapInfo","Map","center","height","level","onDragEnd","latlng","getCenter","getLat","getLng","MapMarker","image","src","size","Size","marker","clickable"],"sourceRoot":""}