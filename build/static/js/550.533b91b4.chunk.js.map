{"version":3,"file":"static/js/550.533b91b4.chunk.js","mappings":"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","sources":["api/kakaoApi.js","pages/sign/SignFindIdPwPage.js","styles/login/loginCss.js","../node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","../node_modules/@ant-design/icons/es/icons/UserOutlined.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { SERVER_URL } from \"./config\";\r\n\r\nSERVER_URL;\r\n\r\nconst rest_api_key = \"94b443da7db84c565579d43ba563dd3f\";\r\nconst redirect_uri = \"http://localhost:3000/sign/kakao\";\r\nconst auth_code_path = \"https://kauth.kakao.com/oauth/authorize\";\r\n\r\nexport const getKakaoLoginLink = () => {\r\n  const kakaoURL = `${auth_code_path}?client_id=${rest_api_key}&redirect_uri=${redirect_uri}&response_type=code`;\r\n  return kakaoURL;\r\n};\r\n\r\nconst access_token_url = `https://kauth.kakao.com/oauth/token`;\r\nexport const getAccessToken = async authCode => {\r\n  const header = {\r\n    headers: {\r\n      \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n    },\r\n  };\r\n\r\n  const params = {\r\n    grant_type: \"authorization_code\",\r\n    client_id: rest_api_key,\r\n    redirect_uri: redirect_uri,\r\n    code: authCode,\r\n  };\r\n\r\n  const res = await axios.post(access_token_url, params, header);\r\n\r\n  const accessToken = res.data.access_token;\r\n\r\n  return accessToken;\r\n};\r\n\r\nexport const getMemberWithAccessToken = async accessToken => {\r\n  console.log(\"백엔드에 회원 등록을 위한 액세스 토큰 전달 \", accessToken);\r\n  const res = await axios.get(\r\n    `${SERVER_URL}/api/member/kakao?accessToken=${accessToken}`,\r\n  );\r\n\r\n  return res.data;\r\n};\r\n","import { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Form, Input } from \"antd\";\r\nimport React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { getKakaoLoginLink } from \"../../api/kakaoApi\";\r\nimport { postLogin } from \"../../api/signUpApi\";\r\nimport useCustomLogin from \"../../hooks/useCustomLogin\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { LoginBt, LoginTitle, LoginWrap } from \"../../styles/login/loginCss\";\r\n\r\nconst initState = {\r\n  email: \"\",\r\n  password: \"\",\r\n};\r\nconst SignFindIdPwPage = () => {\r\n  const navigate = useNavigate();\r\n  const [loginParam, setLoginParam] = useState(initState);\r\n  const kakaoLogin = getKakaoLoginLink();\r\n\r\n  const handleChange = e => {\r\n    // e.target.name\r\n    // e.target.value\r\n    loginParam[e.target.name] = e.target.value;\r\n    setLoginParam({ ...loginParam });\r\n  };\r\n  // 커스터훅 사용하기\r\n  const { doLogin, moveToPath } = useCustomLogin();\r\n  const handleClick = () => {\r\n    const kakaoURL = getKakaoLoginLink();\r\n    window.location.href = kakaoURL;\r\n  };\r\n  const onFinish = async values => {\r\n    try {\r\n      // 로그인 요청\r\n      const result = await postLogin({\r\n        loginParam,\r\n        successFn,\r\n        failFn,\r\n        errorFn: errorFn,\r\n      });\r\n\r\n      // 로그인 성공 시 처리\r\n      successFn(result);\r\n\r\n      // 로그인 후 작업 수행\r\n      doLogin({ loginParam });\r\n    } catch (error) {\r\n      // 로그인 실패 시 처리\r\n      failFn(error);\r\n    }\r\n  };\r\n  const successFn = result => {\r\n    console.log(\"토큰 - \", result);\r\n    moveToPath(\"/\");\r\n  };\r\n\r\n  const failFn = result => {\r\n    console.log(\"실패\", result);\r\n    alert(\"이메일 및 비밀번호 확인하세요.\");\r\n  };\r\n\r\n  const errorFn = result => {\r\n    console.log(\"서버 에러\", result);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* {console.log(\"로그인인포\", loginParam)} */}\r\n      <LoginWrap>\r\n        <LoginTitle>\r\n          <p className=\"logo\">ALCHOHOL HOLIC</p>\r\n          <div className=\"email-line\">\r\n            <div className=\"line\"></div>\r\n            <p>아이디 찾기</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </LoginTitle>\r\n        <Form\r\n          name=\"normal_login\"\r\n          className=\"login-form\"\r\n          initialValues={{\r\n            remember: true,\r\n            email: loginParam.email,\r\n            password: loginParam.password,\r\n          }}\r\n          onFinish={onFinish}\r\n        >\r\n          <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"이메일을 입력해 주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"이메일\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          \r\n          <Form.Item>\r\n            {/* 버튼 style */}\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                background: `${Common.color.f900}`,\r\n                fontSize: \"20px\",\r\n              }}\r\n            >\r\n              로그인\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <LoginTitle>\r\n          <div className=\"login-line\">\r\n            <div className=\"line\"></div>\r\n            <p>비밀번호찾기</p>\r\n            <div className=\"line\"></div>\r\n          </div>\r\n        </LoginTitle>\r\n        <Form.Item\r\n            name=\"email\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"이메일을 입력해 주세요!\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"이메일\"\r\n              name=\"email\"\r\n              onChange={handleChange}\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n            />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name=\"phone\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"핸드폰번호를 입력해주세요\",\r\n              },\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"60px\",\r\n                fontSize: \"20px\",\r\n              }}\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              type=\"text\"\r\n              placeholder=\"핸드폰번호\"\r\n              name=\"phone\"\r\n              onChange={handleChange}\r\n            />\r\n          </Form.Item>\r\n        <Button\r\n            type=\"primary\"\r\n            htmlType=\"submit\"\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"60px\",\r\n              background: `${Common.color.f900}`,\r\n              fontSize: \"20px\",\r\n            }}\r\n          >\r\n            비밀번호 찾기\r\n          </Button>\r\n      </LoginWrap>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignFindIdPwPage;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport { Common } from \"../CommonCss\";\r\n\r\nexport const LoginWrap = styled.div`\r\n  min-width: 1300px;\r\n  padding: 130px 330px 130px 330px;\r\n`;\r\nexport const LoginTitle = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  display: flex;\r\n  flex-direction: column; /* 세로로 요소를 나열하도록 설정 */\r\n  align-items: center;\r\n  /* padding: 30px 0 30px 0; */\r\n  .logo {\r\n    font-size: 50px;\r\n    font-weight: bold;\r\n    padding-bottom: 130px;\r\n  }\r\n  .email-line {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: ${Common.color.p800};\r\n    padding-bottom: 50px;\r\n    /* padding: 20px 0 20px 0; */\r\n    p {\r\n      font-size: 20px;\r\n    }\r\n    .line {\r\n      height: 2px;\r\n      width: 30%;\r\n      background: ${Common.color.p800};\r\n    }\r\n  }\r\n  .login-line {\r\n    position: relative;\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    color: ${Common.color.p800};\r\n    padding: 20px 0 40px 0;\r\n    p {\r\n      font-size: 20px;\r\n    }\r\n    .line {\r\n      height: 2px;\r\n      width: 30%;\r\n      background: ${Common.color.p800};\r\n    }\r\n  }\r\n`;\r\nexport const LoginBt = styled.button`\r\n  width: 100%;\r\n  height: 60px;\r\n  margin-bottom: 17px;\r\n  border-radius: 8px;\r\n  font-size: 20px;\r\n  color: ${Common.color.p800};\r\n  /* background: ${Common.color.y900}; */\r\n  background: none;\r\n  border: 1px solid ${Common.color.p500};\r\n  cursor: pointer;\r\n  img {\r\n    width: 21px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\n\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from \"../components/AntdIcon\";\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _extends({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\nif (process.env.NODE_ENV !== 'production') {\n  UserOutlined.displayName = 'UserOutlined';\n}\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);"],"names":["SERVER_URL","rest_api_key","redirect_uri","getKakaoLoginLink","concat","initState","email","password","SignFindIdPwPage","useNavigate","loginParam","setLoginParam","useState","handleChange","e","target","name","value","doLogin","moveToPath","useCustomLogin","successFn","result","console","log","failFn","alert","errorFn","_jsx","children","_jsxs","LoginWrap","LoginTitle","className","Form","initialValues","remember","onFinish","async","postLogin","error","Item","rules","required","message","Input","prefix","UserOutlined","placeholder","onChange","style","width","height","fontSize","Button","type","htmlType","background","Common","color","f900","Password","_styled","styles","p800","LoginBt","p500","props","ref","React","AntdIcon","_extends","icon","UserOutlinedSvg"],"sourceRoot":""}