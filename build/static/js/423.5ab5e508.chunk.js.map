{"version":3,"file":"static/js/423.5ab5e508.chunk.js","mappings":"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","sources":["atom/addressState.js","components/singup/Address.js","pages/mypage/SignOutModalPage.js","pages/mypage/SignOutPage.js","styles/mypage/MyPage.js"],"sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const addressState = atom({\r\n  key: \"addressState\",\r\n  default: \"\",\r\n});\r\n","import { Button, Form, Input, Modal } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { postCodeStyle, themeObj } from \"../../styles/sign/signArea\";\r\nimport { addressState } from \"../../atom/addressState\";\r\n\r\nconst Address = ({ onAddressChange, address:oladdress }) => {\r\n  const [address, setAddress] = useRecoilState(addressState);\r\n  const [last, setLast] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [values, setValues] = useState({}); // values 객체 추가\r\n\r\n  useEffect(()=>{\r\n    setAddress(oladdress);\r\n  },[]);\r\n\r\n  const completeHandler = data => {\r\n    const { address, zonecode } = data;\r\n\r\n    setAddress(address);\r\n    setLast(address); // lastaddress를 address와 동일하게 설정\r\n    onAddressChange({ zonecode, address, last: address }); // lastaddress를 address와 동일하게 설정\r\n    setIsOpen(false);\r\n\r\n    // 주소 정보를 values 객체에 추가\r\n    setValues(prevValues => ({\r\n      ...prevValues,\r\n      address: address,\r\n    }));\r\n  };\r\n\r\n  // 주소 입력 변경 핸들러\r\n  const inputChangeHandler = event => {\r\n    setAddress({ ...address, last: event.target.value }); // Recoil 상태 업데이트\r\n  };\r\n\r\n  const closeHandler = state => {\r\n    if (state === \"FORCE_CLOSE\") {\r\n      setIsOpen(false);\r\n    } else if (state === \"COMPLETE_CLOSE\") {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const toggleHandler = () => {\r\n    setIsOpen(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", width: 193 }} onClick={toggleHandler}>\r\n        <Form.Item valuePropName=\"zipCode\">\r\n          <Input\r\n            style={{ width: 520, height: 60, fontSize: \"20px\" }}\r\n            value={address}\r\n            placeholder=\"주소\"\r\n            name=\"address\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"button\"\r\n            style={{\r\n              width: \"110px\",\r\n              height: \"60px\",\r\n              backgroundColor: `${Common.color.p900}`,\r\n              border: \"none\",\r\n              marginLeft: \"8px\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n          >\r\n            주소찾기\r\n          </Button>\r\n        </Form.Item>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <Modal\r\n          title=\"주소 찾기\"\r\n          open={isModalOpen}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer=\"\"\r\n        >\r\n          <DaumPostcode\r\n            theme={themeObj}\r\n            style={postCodeStyle}\r\n            onComplete={completeHandler}\r\n            onClose={closeHandler}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","// App.js\r\nimport React, { useState } from 'react';\r\nimport { Modal, Button, Form, Input } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { Common } from '../../styles/CommonCss';\r\nimport { useNavigate } from 'react-router';\r\nimport Swal from 'sweetalert2';\r\nimport jwtAxios from '../../util/jwtUtil';\r\nimport { SERVER_URL } from '../../api/config';\r\nimport { removeCookie } from '../../util/cookieUtil';\r\nimport {  useResetRecoilState } from \"recoil\";\r\nimport { atomSignState } from '../../atom/loginState';\r\n\r\n\r\nconst SignOutModalPage = ({ setIsModalVisible, isModalVisible }) => {\r\n  const [password, setPassword] = useState('') // 비밀번호\r\n  const [passwordCheck, setPasswordCheck] = useState('') // 비밀번호 확인\r\n  const resetSignState = useResetRecoilState(atomSignState);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleOk = () => {\r\n    jwtAxios.get(`${SERVER_URL}/user/withdraw`,\r\n    ).then(data => {\r\n      console.log(data);\r\n      Swal.fire({\r\n        title:\r\n          `<p style='font-size:4rem;margin:1rem;'>회원탈퇴되었습니다.\\n\\n</p>`,\r\n        icon: \"info\",\r\n        width: 600,\r\n        confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n        confirmButtonColor: `${Common.color.f900}`,\r\n      })\r\n      .then(() => {\r\n        removeCookie(\"member\");\r\n        resetSignState();\r\n        setIsModalVisible(false);\r\n        navigate('/');\r\n        window.scroll(0,0);\r\n      });\r\n    }).catch(e => {\r\n      console.log(e);\r\n    });\r\n    \r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalVisible(false);\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: '20px' }}>\r\n      <Modal\r\n        title=\"회원탈퇴\"\r\n        visible={isModalVisible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okText=\"탈퇴\"\r\n        cancelText=\"취소\"\r\n        style={{ top: '30%' }} // 모달의 위치를 조정합니다.\r\n        okButtonProps={{ style: { backgroundColor: '#1890ff', borderColor: '#1890ff' } }} // 확인 버튼 스타일 조정\r\n        cancelButtonProps={{ style: { backgroundColor: '#ff4d4f', borderColor: '#ff4d4f', color: 'white' } }} // 취소 버튼 스타일 조정\r\n      >\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SignOutModalPage;","import React, { useState } from \"react\";\r\nimport MyPageContent from \"../../styles/mypage/MyPage\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport { buttonPrimaryStyle } from \"../../styles/sign/signArea\";\r\nimport Address from \"../../components/singup/Address\";\r\nimport { Button, Form, Input, Select } from \"antd\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport SignOutModalPage from \"./SignOutModalPage\";\r\n\r\nconst columns = [\r\n  {\r\n    title: \"이미지\",\r\n    dataIndex: \"name\",\r\n    render: () => (\r\n      <img style={{ width: \"80px\" }} src=\"/images/moon.jpg\" alt=\"리뷰 작성\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"제품명 | 주문번호\",\r\n    dataIndex: \"test\",\r\n    render: () => (\r\n      <div>\r\n        <p>하여튼 주문명</p>\r\n        <p>12121212-1212121</p>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: \"주문일자\",\r\n    dataIndex: \"date\",\r\n  },\r\n  {\r\n    title: \"매장명\",\r\n    dataIndex: \"math\",\r\n  },\r\n  {\r\n    title: \"주문방식\",\r\n    dataIndex: \"order\",\r\n  },\r\n  {\r\n    title: \"리뷰작성\",\r\n    button: <button>ddldldd</button>,\r\n    render: () => <button>리뷰 작성</button>,\r\n  },\r\n];\r\n\r\nconst doSubmit = () => {\r\n  jwtAxios.put(`${SERVER_URL}/user/update`, {\r\n    \"nickname\": \"dfff\",\r\n    \"password\": \"a123456!\",\r\n    \"phone\": \"01056215621\",\r\n    \"address\": \"주소\",\r\n    \"address2\": \"상세주소\"\r\n  }).then(data => {\r\n    console.log(data);\r\n  }).catch(e => {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\nconst MyMainPage = () => {\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const doSignoutModal = ()=>{\r\n    setIsModalVisible(true);\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <SignOutModalPage \r\n          setIsModalVisible={setIsModalVisible} \r\n          isModalVisible={isModalVisible}\r\n           />\r\n      <Form name=\"mypage_update\">\r\n        <MyPageContent>회원탈퇴</MyPageContent>\r\n        <hr />\r\n        <div style={{ margin: '2rem', width: '100%', textAlign: \"center\" }}>\r\n          <h2 style={{ padding: '0.7rem', fontSize: '2rem' }}>회원 탈퇴하시면 남은 적립금이 사라집니다 탈퇴하시겠습니까?</h2>\r\n        </div>\r\n        <div style={{display:'flex',justifyContent:\"center\"}}>\r\n          <Button onClick={doSignoutModal}\r\n            type=\"primary\"\r\n            style={{\r\n              background: `${Common.color.f900}`,\r\n              width: \"40%\",\r\n              height: \"60px\",\r\n              fontSize: \"20px\",\r\n              marginRight: \"2rem\"\r\n            }}>회원탈퇴</Button>\r\n          <Button onClick={() => {\r\n            navigate('/mypage/info');\r\n          }}\r\n            type=\"primary\"\r\n            style={{\r\n              background: `${Common.color.f900}`,\r\n              width: \"40%\",\r\n              height: \"60px\",\r\n              fontSize: \"20px\",\r\n            }}>취소</Button>\r\n        </div>\r\n      </Form>\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <Link to='/mypage/signout' style={{ fontSize: \"2rem\" }}>      </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMainPage;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport React from \"react\";\r\n\r\nconst MyPageContent = styled.h1`\r\n    font-size: 2rem;\r\n    color:#FF4D35;\r\n`;\r\nexport default MyPageContent;\r\n"],"names":["addressState","atom","key","default","_ref","onAddressChange","address","oladdress","setAddress","useRecoilState","last","setLast","useState","isOpen","setIsOpen","isModalOpen","setIsModalOpen","values","setValues","useEffect","_jsxs","_Fragment","children","style","display","width","onClick","toggleHandler","_jsx","Form","Item","valuePropName","Input","height","fontSize","value","placeholder","name","Button","type","backgroundColor","concat","Common","color","p900","border","marginLeft","fontWeight","Modal","title","open","onOk","handleOk","onCancel","handleCancel","footer","DaumPostcode","theme","themeObj","postCodeStyle","onComplete","data","zonecode","prevValues","onClose","state","setIsModalVisible","isModalVisible","password","setPassword","passwordCheck","setPasswordCheck","resetSignState","useResetRecoilState","atomSignState","navigate","useNavigate","padding","visible","jwtAxios","get","SERVER_URL","then","console","log","Swal","icon","confirmButtonText","confirmButtonColor","f900","removeCookie","window","scroll","catch","e","okText","cancelText","top","okButtonProps","borderColor","cancelButtonProps","MyMainPage","SignOutModalPage","MyPageContent","margin","textAlign","justifyContent","doSignoutModal","background","marginRight","marginTop","Link","to","_styled","target","styles"],"sourceRoot":""}