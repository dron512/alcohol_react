{"version":3,"file":"static/js/627.8ed042e1.chunk.js","mappings":"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","sources":["atom/addressState.js","components/singup/Address.js","pages/mypage/PasswordCh.js","styles/mypage/MyPage.js"],"sourcesContent":["import { atom } from \"recoil\";\r\n\r\nexport const addressState = atom({\r\n  key: \"addressState\",\r\n  default: \"\",\r\n});\r\n","import { Button, Form, Input, Modal } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport DaumPostcode from \"react-daum-postcode\";\r\nimport { useRecoilState } from \"recoil\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { postCodeStyle, themeObj } from \"../../styles/sign/signArea\";\r\nimport { addressState } from \"../../atom/addressState\";\r\n\r\nconst Address = ({ onAddressChange, address:oladdress }) => {\r\n  const [address, setAddress] = useRecoilState(addressState);\r\n  const [last, setLast] = useState(\"\");\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [values, setValues] = useState({}); // values 객체 추가\r\n\r\n  useEffect(()=>{\r\n    setAddress(oladdress);\r\n  },[]);\r\n\r\n  const completeHandler = data => {\r\n    const { address, zonecode } = data;\r\n\r\n    setAddress(address);\r\n    setLast(address); // lastaddress를 address와 동일하게 설정\r\n    onAddressChange({ zonecode, address, last: address }); // lastaddress를 address와 동일하게 설정\r\n    setIsOpen(false);\r\n\r\n    // 주소 정보를 values 객체에 추가\r\n    setValues(prevValues => ({\r\n      ...prevValues,\r\n      address: address,\r\n    }));\r\n  };\r\n\r\n  // 주소 입력 변경 핸들러\r\n  const inputChangeHandler = event => {\r\n    setAddress({ ...address, last: event.target.value }); // Recoil 상태 업데이트\r\n  };\r\n\r\n  const closeHandler = state => {\r\n    if (state === \"FORCE_CLOSE\") {\r\n      setIsOpen(false);\r\n    } else if (state === \"COMPLETE_CLOSE\") {\r\n      setIsOpen(false);\r\n    }\r\n  };\r\n\r\n  const toggleHandler = () => {\r\n    setIsOpen(true);\r\n    setIsModalOpen(true);\r\n  };\r\n\r\n  const handleOk = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setIsModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\", width: 193 }} onClick={toggleHandler}>\r\n        <Form.Item valuePropName=\"zipCode\">\r\n          <Input\r\n            style={{ width: 520, height: 60, fontSize: \"20px\" }}\r\n            value={address}\r\n            placeholder=\"주소\"\r\n            name=\"address\"\r\n          />\r\n        </Form.Item>\r\n\r\n        <Form.Item>\r\n          <Button\r\n            type=\"button\"\r\n            style={{\r\n              width: \"110px\",\r\n              height: \"60px\",\r\n              backgroundColor: `${Common.color.p900}`,\r\n              border: \"none\",\r\n              marginLeft: \"8px\",\r\n              color: \"white\",\r\n              fontWeight: \"bold\",\r\n              fontSize: \"16px\",\r\n            }}\r\n          >\r\n            주소찾기\r\n          </Button>\r\n        </Form.Item>\r\n      </div>\r\n\r\n      {isOpen && (\r\n        <Modal\r\n          title=\"주소 찾기\"\r\n          open={isModalOpen}\r\n          onOk={handleOk}\r\n          onCancel={handleCancel}\r\n          footer=\"\"\r\n        >\r\n          <DaumPostcode\r\n            theme={themeObj}\r\n            style={postCodeStyle}\r\n            onComplete={completeHandler}\r\n            onClose={closeHandler}\r\n          />\r\n        </Modal>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Address;\r\n","import React, { useState } from \"react\";\r\nimport MyPageContent from \"../../styles/mypage/MyPage\";\r\nimport { SERVER_URL } from \"../../api/config\";\r\nimport jwtAxios from \"../../util/jwtUtil\";\r\nimport { buttonPrimaryStyle } from \"../../styles/sign/signArea\";\r\nimport Address from \"../../components/singup/Address\";\r\nimport { Button, Form, Input, Select } from \"antd\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { useNavigate } from 'react-router';\r\nimport { useResetRecoilState } from 'recoil';\r\nimport { atomSignState } from '../../atom/loginState';\r\nimport { removeCookie } from '../../util/cookieUtil';\r\nimport Swal from \"sweetalert2\";\r\n\r\n\r\nconst columns = [\r\n  {\r\n    title: \"이미지\",\r\n    dataIndex: \"name\",\r\n    render: () => (\r\n      <img style={{ width: \"80px\" }} src=\"/images/moon.jpg\" alt=\"리뷰 작성\" />\r\n    ),\r\n  },\r\n  {\r\n    title: \"제품명 | 주문번호\",\r\n    dataIndex: \"test\",\r\n    render: () => (\r\n      <div>\r\n        <p>하여튼 주문명</p>\r\n        <p>12121212-1212121</p>\r\n      </div>\r\n    ),\r\n  },\r\n  {\r\n    title: \"주문일자\",\r\n    dataIndex: \"date\",\r\n  },\r\n  {\r\n    title: \"매장명\",\r\n    dataIndex: \"math\",\r\n  },\r\n  {\r\n    title: \"주문방식\",\r\n    dataIndex: \"order\",\r\n  },\r\n  {\r\n    title: \"리뷰작성\",\r\n    button: <button>ddldldd</button>,\r\n    render: () => <button>리뷰 작성</button>,\r\n  },\r\n];\r\n\r\nconst doSubmit = () => {\r\n  jwtAxios.put(`${SERVER_URL}/user/update`, {\r\n    \"nickname\": \"dfff\",\r\n    \"password\": \"a123456!\",\r\n    \"phone\": \"01056215621\",\r\n    \"address\": \"주소\",\r\n    \"address2\": \"상세주소\"\r\n  }).then(data => {\r\n    console.log(data);\r\n  }).catch(e => {\r\n    console.log(e);\r\n  });\r\n}\r\n\r\nconst MyMainPage = () => {\r\n\r\n  const [oldPw, setOldPw] = useState();\r\n  const [newPw, setNewPw] = useState();\r\n  const [newPwCon, setNewPwCon] = useState();\r\n  const [password, setPassword] = useState();\r\n  const [newPassword, setNewPassword] = useState();\r\n  const [passwordch, setPasswordch] = useState();\r\n\r\n  const navigate = useNavigate();\r\n  const resetSignState = useResetRecoilState(atomSignState);\r\n\r\n\r\n  const doSubmit = () => {\r\n    jwtAxios.put(`${SERVER_URL}/user/updatePw`, {\r\n      password,\r\n      newPassword,\r\n      passwordch\r\n    }).then(data => {\r\n      if (data.data === '비밀번호 수정이 완료되었습니다.') {\r\n        Swal.fire(\r\n          {\r\n          title:\"<p style='font-size:4rem;margin:1rem;'>비밀번호 변경되었습니다.</p>\",\r\n          icon: \"info\",\r\n          width: 600,\r\n          confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n          confirmButtonColor: `${Common.color.f900}`,\r\n        });\r\n        removeCookie(\"member\");\r\n        resetSignState();\r\n        navigate('/sign/in');\r\n      }\r\n    }).catch(e => {\r\n      console.log(e);\r\n      Swal.fire(\r\n        {\r\n        title:`<p style='font-size:4rem;margin:1rem;'>\r\n        비밀번호 변경실패!!\r\n        <br>\r\n        ${e.response.data}\r\n        </p>`,\r\n        icon: \"warning\",\r\n        width: 600,\r\n        confirmButtonText: `<span style=\"display:bolck;font-size:4rem;width:200px;padding:1rem;\">확인</span>`,\r\n        confirmButtonColor: `${Common.color.f900}`,\r\n      });\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Form name=\"mypage_update\">\r\n        <MyPageContent>비밀번호수정</MyPageContent>\r\n        <hr />\r\n        <div style={{ margin: '2rem', width: '100%' }}>\r\n          <h2 style={{ padding: '0.7rem', fontSize: '2rem' }}>필수 정보</h2>\r\n          <div style={{ display: 'flex', flexDirection: 'column' }}>\r\n            <div style={{ width: '100%' }}>\r\n              <Form.Item>\r\n                <Input placeholder='현재비밀번호'\r\n                  style={{\r\n                    width: '40%', fontSize: '2rem',\r\n                    padding: '1rem', margin: '0.5rem'\r\n                  }} value={oldPw} onChange={(e) => setOldPw(e.target.value)} />\r\n              </Form.Item>\r\n              <Form.Item>\r\n                <Input placeholder='새로운비밀번호'\r\n                  style={{\r\n                    width: '40%', fontSize: '2rem',\r\n                    padding: '1rem', margin: '0.5rem'\r\n                  }}\r\n                  value={newPw}\r\n                  onChange={(e) => setNewPw(e.target.value)} />\r\n              </Form.Item>\r\n            </div>\r\n            <div style={{ flexGrow: 1 }}>\r\n              <Form.Item>\r\n                <Input placeholder='새로운비밀번호확인'\r\n                  style={{\r\n                    width: '40%', fontSize: '2rem',\r\n                    padding: '1rem', margin: '0.5rem'\r\n                  }}\r\n                  value={newPwCon}\r\n                  onChange={(e) => setNewPwCon(e.target.value)} />\r\n              </Form.Item>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <Button onClick={doSubmit}\r\n          type=\"primary\"\r\n          style={{\r\n            background: `${Common.color.f900}`,\r\n            width: \"50%\",\r\n            height: \"60px\",\r\n            fontSize: \"20px\",\r\n          }}>비밀번호수정</Button>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyMainPage;\r\n","import styled from \"@emotion/styled/macro\";\r\nimport React from \"react\";\r\n\r\nconst MyPageContent = styled.h1`\r\n    font-size: 2rem;\r\n    color:#FF4D35;\r\n`;\r\nexport default MyPageContent;\r\n"],"names":["addressState","atom","key","default","_ref","onAddressChange","address","oladdress","setAddress","useRecoilState","last","setLast","useState","isOpen","setIsOpen","isModalOpen","setIsModalOpen","values","setValues","useEffect","_jsxs","_Fragment","children","style","display","width","onClick","toggleHandler","_jsx","Form","Item","valuePropName","Input","height","fontSize","value","placeholder","name","Button","type","backgroundColor","concat","Common","color","p900","border","marginLeft","fontWeight","Modal","title","open","onOk","handleOk","onCancel","handleCancel","footer","DaumPostcode","theme","themeObj","postCodeStyle","onComplete","data","zonecode","prevValues","onClose","state","MyMainPage","oldPw","setOldPw","newPw","setNewPw","newPwCon","setNewPwCon","password","setPassword","newPassword","setNewPassword","passwordch","setPasswordch","navigate","useNavigate","resetSignState","useResetRecoilState","atomSignState","MyPageContent","margin","padding","flexDirection","onChange","e","target","flexGrow","doSubmit","jwtAxios","put","SERVER_URL","then","Swal","icon","confirmButtonText","confirmButtonColor","f900","removeCookie","catch","console","log","response","background","_styled","styles"],"sourceRoot":""}