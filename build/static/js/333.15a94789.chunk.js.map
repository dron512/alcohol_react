{"version":3,"file":"static/js/333.15a94789.chunk.js","mappings":"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","sources":["api/wishListApi.js","components/product/WishCard.js","pages/mypage/WishListPage.js"],"sourcesContent":["import { SERVER_URL } from \"./config\";\r\nimport jwtAxios from \"../util/jwtUtil\";\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\n\r\nconst prefix = `${SERVER_URL}/favorites`;\r\n\r\nexport const getWishList = async () => {\r\n  try {\r\n    const url = `${prefix}/list`;\r\n    const res = await jwtAxios.get(url);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      return res.data;\r\n    } else {\r\n      alert(\"메인 모스트 데이터 불러오기 실패\");\r\n    }\r\n  } catch (error) {\r\n    alert(error);\r\n  }\r\n};\r\n\r\nexport const deleteWish = async ({ code }) => {\r\n  try {\r\n    const url = `${prefix}`;\r\n    const res = await jwtAxios.delete(url, { data: { code: code.code } });\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"실패\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"err\", error);\r\n  }\r\n};\r\n\r\nexport const useWishDeleteMutation = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const { mutate, isLoading } = useMutation(code => deleteWish({ code }), {\r\n    onSuccess: res => {\r\n      queryClient.invalidateQueries([\"wishQuery\"]);\r\n    },\r\n    onError: error => {\r\n      console.error(\"Error updating cart:\", error);\r\n    },\r\n  });\r\n  return { mutate, isLoading };\r\n};\r\n\r\nexport const postWish = async ({ code }) => {\r\n  try {\r\n    // const url = `${prefix}?code=${code.code}`;\r\n    const url = `${prefix}`;\r\n    const res = await jwtAxios.post(url, code);\r\n\r\n    const status = res.status.toString();\r\n    if (status.charAt(0) === \"2\") {\r\n      return res.data;\r\n    } else {\r\n      console.log(\"er\");\r\n    }\r\n  } catch (error) {\r\n    console.log(\"er\", error);\r\n  }\r\n};\r\n\r\nexport const useWishPostMutation = () => {\r\n  const queryClient = useQueryClient();\r\n\r\n  const { mutate, isLoading } = useMutation(code => postWish({ code }), {\r\n    onSuccess: res => {\r\n      queryClient.invalidateQueries([\"wishQuery\"]);\r\n    },\r\n    onError: error => {\r\n      console.error(\"Error updating cart:\", error);\r\n    },\r\n  });\r\n  return { mutate, isLoading };\r\n};\r\n\r\nexport const wishPostCheck = async ({ code }) => {\r\n  try {\r\n    // const url = `${prefix}?code=${code.code}`;\r\n    const url = `${prefix}/check`;\r\n    const res = await jwtAxios.post(url, code);\r\n    if (res.status === 200) {\r\n      return res;\r\n    } else {\r\n      console.log(\"데이터 불러오기 실패\");\r\n    }\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const useWishPostCheckMutation = ({ setHeartChecked }) => {\r\n  const { mutate, isLoading } = useMutation(code => wishPostCheck({ code }), {\r\n    onSuccess: data => {\r\n      setHeartChecked(data.data);\r\n    },\r\n    onError: error => {\r\n      console.error(\"처리 중 오류가 발생했습니다:\", error);\r\n    },\r\n  });\r\n  return { mutate, isLoading };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { useNavigate } from \"react-router\";\r\nimport { Common } from \"../../styles/CommonCss\";\r\nimport { CardFlex } from \"../../styles/main/cardStlye\";\r\nimport { ProCardContainer } from \"../../styles/product/proCardCss\";\r\nimport OptiPlaceholder from \"../image-opti/OptiPlaceholder\";\r\nimport OptiWireframe from \"../image-opti/OptiWireframe\";\r\nimport useCustomMove from \"../../hooks/useCustomMove\";\r\nimport { deleteWish, getWishList } from \"../../api/wishListApi\";\r\n\r\nconst initState = [\r\n  {\r\n    code: 1,\r\n    name: \"벤리악 12년 700ml\",\r\n    picture: \"http://threeback.hellomh.site/images/01.jpg\",\r\n  },\r\n];\r\nconst WishCard = ({ data }) => {\r\n  // console.log(\"받은 데이터\", data);\r\n  const [wishCode, setWishCode] = useState(data.code);\r\n  const { moveToDetail } = useCustomMove();\r\n  const navigate = useNavigate();\r\n\r\n  const fetchData = code => {\r\n    console.log(\"상품 코드2:\", wishCode);\r\n    deleteWish({\r\n      code: {\r\n        code: code,\r\n      },\r\n      successFn,\r\n      failFn,\r\n      errorFn: data => {\r\n        alert(\"서버상태 불안정 다음에 상품불러오기 시도\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const successFn = data => {\r\n    // setWishCode(data);\r\n  };\r\n  const failFn = data => {\r\n    alert(\"failFn : 데이터 호출에 실패하였습니다.\");\r\n  };\r\n\r\n  return (\r\n    // <ProCardContainer onClick={() => moveToDetail(data?.code)}>\r\n    <ProCardContainer>\r\n      <OptiPlaceholder\r\n        alt=\"\"\r\n        width={240}\r\n        height={240}\r\n        placeholder={\r\n          <div>\r\n            <OptiWireframe width={240} height={240} />\r\n          </div>\r\n        }\r\n        src={data?.picture}\r\n        onClick={() => moveToDetail(data?.code)}\r\n      />\r\n\r\n      <CardFlex>\r\n        <div className=\"tagform\">\r\n          <button className=\"wish-bt\" onClick={() => fetchData(data.code)}>\r\n            <img src={process.env.PUBLIC_URL + `/images/star.png`} alt=\"star\" />\r\n          </button>\r\n\r\n          <p className=\"productNm\" style={{ color: Common.color.p900 }}>\r\n            {data?.name}\r\n          </p>\r\n        </div>\r\n      </CardFlex>\r\n\r\n      {/* <p className=\"productNm\" style={{ color: Common.color.p900 }}>\r\n        {data?.name}\r\n      </p> */}\r\n    </ProCardContainer>\r\n  );\r\n};\r\nexport default WishCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { GridContainer } from \"../../styles/product/proWrapCss\";\r\nimport { getWishList } from \"../../api/wishListApi\";\r\nimport WishCard from \"../../components/product/WishCard\";\r\nimport { useQuery } from \"react-query\";\r\n\r\nconst WishListPage = () => {\r\n  const [wishListData, setWishListData] = useState([]);\r\n\r\n  const { data: wishGetListMutate } = useQuery({\r\n    queryKey: [\"wishQuery\"],\r\n    queryFn: () => getWishList({}),\r\n  });\r\n\r\n  useEffect(() => {\r\n    setWishListData(wishGetListMutate);\r\n  }, [wishGetListMutate]);\r\n\r\n  return (\r\n    <div>\r\n      <GridContainer>\r\n        {wishListData?.map(product => (\r\n          <WishCard key={product.code} data={product} />\r\n        ))}\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WishListPage;\r\n"],"names":["prefix","concat","SERVER_URL","getWishList","async","url","res","jwtAxios","get","status","toString","charAt","data","alert","error","deleteWish","code","_ref","delete","console","log","useWishDeleteMutation","queryClient","useQueryClient","mutate","isLoading","useMutation","onSuccess","invalidateQueries","onError","useWishPostMutation","_ref2","post","postWish","useWishPostCheckMutation","_ref4","setHeartChecked","_ref3","wishPostCheck","wishCode","setWishCode","useState","moveToDetail","useCustomMove","successFn","useNavigate","failFn","_jsxs","ProCardContainer","children","_jsx","OptiPlaceholder","alt","width","height","placeholder","OptiWireframe","src","picture","onClick","CardFlex","className","fetchData","errorFn","style","color","Common","p900","name","WishListPage","wishListData","setWishListData","wishGetListMutate","useQuery","queryKey","queryFn","useEffect","GridContainer","map","product","WishCard"],"sourceRoot":""}